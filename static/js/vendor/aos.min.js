/*!
 * AOS - Animate On Scroll Library
 * https://michalsnik.github.io/aos/
 * 
 * This is a placeholder for AOS library
 * For production, replace with actual AOS library from:
 * https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js
 */

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = global || self, global.AOS = factory());
})(this, function () {
    'use strict';

    // AOS placeholder implementation for development
    var AOS = {
        init: function(options) {
            options = options || {};
            
            // Default settings
            var settings = {
                offset: options.offset || 120,
                delay: options.delay || 0,
                duration: options.duration || 400,
                easing: options.easing || 'ease',
                once: options.once !== undefined ? options.once : false,
                mirror: options.mirror !== undefined ? options.mirror : false,
                anchorPlacement: options.anchorPlacement || 'top-bottom',
                disable: options.disable || false
            };
            
            this.settings = settings;
            this.elements = [];
            
            if (settings.disable) {
                return;
            }
            
            this.refresh();
            this.bindEvents();
            
            console.log('AOS initialized (placeholder version)');
        },
        
        refresh: function() {
            this.elements = document.querySelectorAll('[data-aos]');
            this.checkElements();
        },
        
        refreshHard: function() {
            this.elements = [];
            this.refresh();
        },
        
        bindEvents: function() {
            var self = this;
            
            window.addEventListener('scroll', function() {
                self.checkElements();
            });
            
            window.addEventListener('resize', function() {
                self.checkElements();
            });
        },
        
        checkElements: function() {
            var self = this;
            
            this.elements.forEach(function(element) {
                if (self.isElementInViewport(element)) {
                    self.animateElement(element);
                } else if (!self.settings.once || !element.classList.contains('aos-animate')) {
                    self.resetElement(element);
                }
            });
        },
        
        isElementInViewport: function(element) {
            var rect = element.getBoundingClientRect();
            var windowHeight = window.innerHeight || document.documentElement.clientHeight;
            var offset = this.settings.offset;
            
            return (rect.top <= windowHeight - offset) && (rect.bottom >= offset);
        },
        
        animateElement: function(element) {
            if (element.classList.contains('aos-animate')) {
                return;
            }
            
            var animation = element.getAttribute('data-aos');
            var duration = element.getAttribute('data-aos-duration') || this.settings.duration;
            var delay = element.getAttribute('data-aos-delay') || this.settings.delay;
            var easing = element.getAttribute('data-aos-easing') || this.settings.easing;
            
            // Apply animation styles
            element.style.transition = 'all ' + duration + 'ms ' + easing + ' ' + delay + 'ms';
            element.classList.add('aos-animate');
            
            // Basic animation effects
            switch (animation) {
                case 'fade-up':
                    element.style.transform = 'translateY(0)';
                    element.style.opacity = '1';
                    break;
                case 'fade-down':
                    element.style.transform = 'translateY(0)';
                    element.style.opacity = '1';
                    break;
                case 'fade-left':
                    element.style.transform = 'translateX(0)';
                    element.style.opacity = '1';
                    break;
                case 'fade-right':
                    element.style.transform = 'translateX(0)';
                    element.style.opacity = '1';
                    break;
                case 'fade-in':
                    element.style.opacity = '1';
                    break;
                case 'zoom-in':
                    element.style.transform = 'scale(1)';
                    element.style.opacity = '1';
                    break;
                case 'zoom-out':
                    element.style.transform = 'scale(1)';
                    element.style.opacity = '1';
                    break;
                case 'slide-up':
                    element.style.transform = 'translateY(0)';
                    break;
                case 'slide-down':
                    element.style.transform = 'translateY(0)';
                    break;
                case 'slide-left':
                    element.style.transform = 'translateX(0)';
                    break;
                case 'slide-right':
                    element.style.transform = 'translateX(0)';
                    break;
                case 'flip-up':
                    element.style.transform = 'rotateX(0)';
                    element.style.opacity = '1';
                    break;
                case 'flip-down':
                    element.style.transform = 'rotateX(0)';
                    element.style.opacity = '1';
                    break;
                case 'flip-left':
                    element.style.transform = 'rotateY(0)';
                    element.style.opacity = '1';
                    break;
                case 'flip-right':
                    element.style.transform = 'rotateY(0)';
                    element.style.opacity = '1';
                    break;
                default:
                    element.style.opacity = '1';
            }
        },
        
        resetElement: function(element) {
            if (!this.settings.mirror && element.classList.contains('aos-animate')) {
                return;
            }
            
            var animation = element.getAttribute('data-aos');
            
            element.classList.remove('aos-animate');
            
            // Reset animation styles
            switch (animation) {
                case 'fade-up':
                    element.style.transform = 'translateY(20px)';
                    element.style.opacity = '0';
                    break;
                case 'fade-down':
                    element.style.transform = 'translateY(-20px)';
                    element.style.opacity = '0';
                    break;
                case 'fade-left':
                    element.style.transform = 'translateX(20px)';
                    element.style.opacity = '0';
                    break;
                case 'fade-right':
                    element.style.transform = 'translateX(-20px)';
                    element.style.opacity = '0';
                    break;
                case 'fade-in':
                    element.style.opacity = '0';
                    break;
                case 'zoom-in':
                    element.style.transform = 'scale(0.6)';
                    element.style.opacity = '0';
                    break;
                case 'zoom-out':
                    element.style.transform = 'scale(1.2)';
                    element.style.opacity = '0';
                    break;
                case 'slide-up':
                    element.style.transform = 'translateY(100%)';
                    break;
                case 'slide-down':
                    element.style.transform = 'translateY(-100%)';
                    break;
                case 'slide-left':
                    element.style.transform = 'translateX(100%)';
                    break;
                case 'slide-right':
                    element.style.transform = 'translateX(-100%)';
                    break;
                case 'flip-up':
                    element.style.transform = 'rotateX(-80deg)';
                    element.style.opacity = '0';
                    break;
                case 'flip-down':
                    element.style.transform = 'rotateX(80deg)';
                    element.style.opacity = '0';
                    break;
                case 'flip-left':
                    element.style.transform = 'rotateY(-80deg)';
                    element.style.opacity = '0';
                    break;
                case 'flip-right':
                    element.style.transform = 'rotateY(80deg)';
                    element.style.opacity = '0';
                    break;
                default:
                    element.style.opacity = '0';
            }
        }
    };
    
    // Initialize default CSS for AOS elements
    var style = document.createElement('style');
    style.textContent = `
        [data-aos] {
            pointer-events: none;
        }
        [data-aos].aos-animate {
            pointer-events: auto;
        }
        [data-aos="fade-up"] {
            transform: translateY(20px);
            opacity: 0;
        }
        [data-aos="fade-down"] {
            transform: translateY(-20px);
            opacity: 0;
        }
        [data-aos="fade-left"] {
            transform: translateX(20px);
            opacity: 0;
        }
        [data-aos="fade-right"] {
            transform: translateX(-20px);
            opacity: 0;
        }
        [data-aos="fade-in"] {
            opacity: 0;
        }
        [data-aos="zoom-in"] {
            transform: scale(0.6);
            opacity: 0;
        }
        [data-aos="zoom-out"] {
            transform: scale(1.2);
            opacity: 0;
        }
        [data-aos^="flip-"] {
            backface-visibility: hidden;
        }
    `;
    
    if (document.head) {
        document.head.appendChild(style);
    } else {
        document.addEventListener('DOMContentLoaded', function() {
            document.head.appendChild(style);
        });
    }
    
    return AOS;
});

/* 
PRODUCTION NOTE: 
This is a simplified AOS placeholder for development purposes.
For production use, replace this file with the official AOS library:
Download from: https://github.com/michalsnik/aos
CDN: https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js
Also include the CSS file: https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css
*/
