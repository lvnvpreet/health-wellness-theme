/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */
/* This is a placeholder for jQuery v3.6.0 minified library */
/* In production, replace this with the actual jQuery library from: */
/* https://code.jquery.com/jquery-3.6.0.min.js */

(function(global, factory) {
    "use strict";
    if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = global.document ?
            factory(global, true) :
            function(w) {
                if (!w.document) {
                    throw new Error("jQuery requires a window with a document");
                }
                return factory(w);
            };
    } else {
        factory(global);
    }
})(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
    
    // Placeholder jQuery implementation for development
    // Replace with actual jQuery library for production use
    
    var jQuery = function(selector, context) {
        return new jQuery.fn.init(selector, context);
    };
    
    jQuery.fn = jQuery.prototype = {
        jquery: "3.6.0",
        constructor: jQuery,
        length: 0,
        
        init: function(selector, context) {
            if (!selector) {
                return this;
            }
            
            if (typeof selector === "string") {
                var elements = document.querySelectorAll(selector);
                this.length = elements.length;
                for (var i = 0; i < elements.length; i++) {
                    this[i] = elements[i];
                }
            } else if (selector.nodeType) {
                this[0] = selector;
                this.length = 1;
            }
            
            return this;
        },
        
        ready: function(callback) {
            if (document.readyState !== 'loading') {
                callback(jQuery);
            } else {
                document.addEventListener('DOMContentLoaded', function() {
                    callback(jQuery);
                });
            }
            return this;
        },
        
        each: function(callback) {
            for (var i = 0; i < this.length; i++) {
                callback.call(this[i], i, this[i]);
            }
            return this;
        },
        
        on: function(event, handler) {
            return this.each(function() {
                this.addEventListener(event, handler);
            });
        },
        
        click: function(handler) {
            return this.on('click', handler);
        },
        
        addClass: function(className) {
            return this.each(function() {
                this.classList.add(className);
            });
        },
        
        removeClass: function(className) {
            return this.each(function() {
                this.classList.remove(className);
            });
        },
        
        toggleClass: function(className) {
            return this.each(function() {
                this.classList.toggle(className);
            });
        },
        
        hide: function() {
            return this.each(function() {
                this.style.display = 'none';
            });
        },
        
        show: function() {
            return this.each(function() {
                this.style.display = '';
            });
        },
        
        fadeIn: function(duration) {
            return this.each(function() {
                this.style.opacity = '0';
                this.style.display = '';
                var element = this;
                var start = performance.now();
                var animate = function(timestamp) {
                    var progress = (timestamp - start) / (duration || 400);
                    if (progress < 1) {
                        element.style.opacity = progress;
                        requestAnimationFrame(animate);
                    } else {
                        element.style.opacity = '1';
                    }
                };
                requestAnimationFrame(animate);
            });
        },
        
        fadeOut: function(duration) {
            return this.each(function() {
                var element = this;
                var start = performance.now();
                var animate = function(timestamp) {
                    var progress = (timestamp - start) / (duration || 400);
                    if (progress < 1) {
                        element.style.opacity = 1 - progress;
                        requestAnimationFrame(animate);
                    } else {
                        element.style.opacity = '0';
                        element.style.display = 'none';
                    }
                };
                requestAnimationFrame(animate);
            });
        }
    };
    
    jQuery.fn.init.prototype = jQuery.fn;
    
    var $ = jQuery;
    
    if (typeof noGlobal === "undefined") {
        window.jQuery = window.$ = jQuery;
    }
    
    return jQuery;
});

/* 
PRODUCTION NOTE: 
This is a basic jQuery placeholder for development purposes.
For production use, replace this file with the official jQuery library:
Download from: https://jquery.com/download/
CDN: https://code.jquery.com/jquery-3.6.0.min.js
*/
